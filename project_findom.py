# -*- coding: utf-8 -*-
"""Project_Findom.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1S8fmYeauzfbeM48cVVwJUerSmI_hGlgB
"""

import tweepy

tweepy.__version__

# pip install schedule

import schedule
import time

CONSUMER_KEY = ""
CONSUMER_SECRET = ""
#Bearer_token = "AAAAAAAAAAAAAAAAAAAAABjfFwEAAAAAZxzAtRTUbK9g1K6a%2BWFTU2kdcxA%3DlYZhCtrFdPICkaodXE0wovYnH0mOgJT60xe135c8eLvF5glTCn"
Access_Token = ""
Access_Token_secret = ""

auth = tweepy.OAuthHandler(CONSUMER_KEY, CONSUMER_SECRET)
auth.set_access_token(Access_Token, Access_Token_secret)
#auth.set_access_token(user.acc_token,user.acc_secret)
api = tweepy.API(auth)

tweets = tweepy.Cursor(api.search,
              q='Joe biden',
              lang="en").items(5)
tweets
#len(tweets)

data_s = []
author_s = []
id = []
status_id = []
bc = 0
for tweet in tweets:
  status_id.append(tweet.id)
  data_s.append(tweet.text)
  author_s.append(tweet.author.screen_name)
  id.append(tweet.author.id)
  print(tweet.text)
  #a1 = tweet.created_at
  a2 = tweet.metadata
    #a3 = tweet.author
  bc += 1

author_s

status_id

#res = api.update_status('Hi Follow back for earning', in_reply_to_status_id=1467906334565834757, auto_populate_reply_metadata=True)

data_s

author_s

id

api.create_friendship('904169786694934529')

import schedule
import time

def job():
    print("I'm working...")

#schedule.every(10).seconds.do(job)
schedule.every(10).minutes.do(job)
#schedule.every().hour.do(job)
#schedule.every().day.at("10:30").do(job)
#schedule.every(5).to(10).minutes.do(job)
#schedule.every().monday.do(job)
#schedule.every().wednesday.at("13:15").do(job)
#schedule.every().minute.at(":17").do(job)

while True:
    schedule.run_pending()
    time.sleep(1)

def tweepy_bot():
  tweets = tweepy.Cursor(api.search,q='Joe biden',lang="en").items(1) 
  print(tweets)

  data_s = []
  author_s = []
  id = []
  status_id = []
  bc = 0
  for tweet in tweets:
    try:
      status_id.append(tweet.id)
      data_s.append(tweet.text)
      author_s.append(tweet.author.screen_name)
      id.append(tweet.author.id)
      print(tweet.text)
      #a1 = tweet.created_at
      a2 = tweet.metadata
      #a3 = tweet.author
      bc += 1
    except Exception as e:
      print(e)

    for i in status_id:
      try:
        api.update_status('Hi Follow Back for more tweets and interested messages', in_reply_to_status_id=i, auto_populate_reply_metadata=True)
      except Exception as e:
        print(e)

schedule.every().hour.do(tweepy_bot)

while True:
  try:
    schedule.run_pending()
    time.sleep(1)
  except Exception as e:
      print(e)


#print(abc)

for i in id:
  print(api.create_friendship(i))

for i in status_id: 
  api.update_status('Hi Follow back for earning and money back tricks', in_reply_to_status_id=i, auto_populate_reply_metadata=True)

api.update_status()

abc = []
follower_idss = api.followers_ids()
for i in follower_idss:
  abc.append(i)
  #follower_idss

abc

for i in follower_idss:
  print(api.send_direct_message(recipient_id=i,text='I am here for your help'))

"""Messaging_part"""

api.list_direct_messages()

from nltk.chat.util import Chat, reflections
pairs = [
    [
        r"my name is (.*)",
        ["Hello %1, How are you today ?",]
    ],
     [
        r"what is your name ?",
        ["My name is Chatty and I'm a chatbot ?",]
    ],
    [
        r"how are you ?",
        ["I'm doing good\nHow about You ?",]
    ],
    [
        r"sorry (.*)",
        ["Its alright","Its OK, never mind",]
    ],
    [
        r"i'm (.*) doing good",
        ["Nice to hear that","Alright :)",]
    ],
    [
        r"hi|hey|hello",
        ["Hello", "Hey there",]
    ],
    [
        r"(.*) age?",
        ["I'm a computer program dude\nSeriously you are asking me this?",]
        
    ],
    [
        r"what (.*) want ?",
        ["Make me an offer I can't refuse",]
        
    ],
    [
        r"(.*) created ?",
        ["Nagesh created me using Python's NLTK library ","top secret ;)",]
    ],
    [
        r"(.*) (location|city) ?",
        ['Chennai, Tamil Nadu',]
    ],
    [
        r"how is weather in (.*)?",
        ["Weather in %1 is awesome like always","Too hot man here in %1","Too cold man here in %1","Never even heard about %1"]
    ],
    [
        r"i work in (.*)?",
        ["%1 is an Amazing company, I have heard about it. But they are in huge loss these days.",]
    ],
[
        r"(.*)raining in (.*)",
        ["No rain since last week here in %2","Damn its raining too much here in %2"]
    ],
    [
        r"how (.*) health(.*)",
        ["I'm a computer program, so I'm always healthy ",]
    ],
    [
        r"(.*) (sports|game) ?",
        ["I'm a very big fan of Football",]
    ],
    [
        r"who (.*) sportsperson ?",
        ["Messy","Ronaldo","Roony"]
],
    [
        r"who (.*) (moviestar|actor)?",
        ["Brad Pitt"]
],
    [
        r"quit",
        ["BBye take care. See you soon :) ","It was nice talking to you. See you soon :)"]
],
]
def chatty():
        print("Hi, I'm Robot 2.O and I chat alot ;)\nPlease type lowercase English language to start a conversation. Type quit to leave ") #default message at the start
        chat = Chat(pairs, reflections)
        #chat.converse()
        #list_chart = chat.respond(api.list_direct_messages(count = 1))
        #list_chart[0].message_create['message_data']['text']
        api.send_direct_message(1282563474472796162,text = chat.respond(api.list_direct_messages(count = 1)[0].message_create['message_data']['text']))
if __name__ == "__main__":
    chatty()

# !pip install chatterbot

from chatterbot import ChatBot
from chatterbot.trainers import ListTrainer
 
#creating a new chatbot
chatbot = ChatBot('Edureka')
trainer = ListTrainer(chatbot)
trainer.train([ 'hi, can I help you find a course', 'sure love to find you a course', 'your course have been selected'])
 
#getting a response from the chatbot
response = chatbot.get_response("I want a course")
print(response)

if response == "I want a course":
  print('found')

else:
  print('Not found')